{"version":3,"sources":["master.css","vendor/reset/_reset.scss","vendor/neat/grid/_box-sizing.scss","vendor/_vendor.scss","vendor/neat/grid/_outer-container.scss","vendor/neat/mixins/_clearfix.scss","base/_typography.scss","vendor/typi/ty/_mixins.scss","components/_buttons.scss","components/_forms.scss","components/_layout.scss","components/_lists.scss","components/_pagination.scss","components/_tables.scss","layout/_site-header.scss","vendor/neat/grid/_span-columns.scss","layout/_site-footer.scss"],"names":[],"mappings":"AAMA,EAAG,KAAM,QAAS,QCDlB,ODQA,QAAS,MAGG,MAPZ,EAH2B,IADA,WCA3B,KDQgB,OADT,QAHE,OAHuB,KAAM,KAI9B,GAHR,IAMwB,QANnB,ICFL,IDKA,GAAI,GAHM,GAMuB,MAFjC,SAGQ,WAAR,OAAoB,OAHV,KANV,GAAI,GAAI,GAAI,GAAI,GAAI,GASQ,OAAQ,OCTpC,KDIM,ECJN,ODEc,IAAK,IAAK,IAIR,MAAO,OADH,GAMd,KADN,KAAM,ICVN,ODKY,GAKD,OAVa,EAAe,IAEV,EAQV,KARa,EAAG,KAQV,QAPzB,MCHA,KDGO,OAAQ,OAAQ,IAOW,QAPN,IAI5B,MAAgB,MAA6B,GAAtB,MAAkB,GAAX,MAI9B,KAJqC,GAJJ,GAC9B,EACa,GAFqB,IAQlB,MCElB,OAAA,EACA,QAAA,EACA,OAAA,EACA,UAAA,KACA,KAAA,QACA,eAAA,SAGD,QAAA,MAAA,QAAA,WAAA,ODAA,OAAQ,OAAQ,OAAQ,KAAM,IAAK,QCElC,QAAA,MAED,KACC,YAAA,EAED,GAAA,GACC,WAAA,KAED,WAAA,EACC,OAAA,KAED,iBAAA,kBDAU,QAAV,SCEC,QAAA,GACA,QAAA,KAED,MACC,gBAAA,SACA,eAAA,EC3CC,KACE,mBAAA,WAAA,gBAAA,WAAA,WAAA,WAGF,EAAA,QAAA,SAII,mBAAA,QAAA,gBAAA,QAAA,WAAA,QCHN,WCoBE,UAAA,OAEE,YAAA,KACA,aAAA,KDvBJ,kBEYI,MAAA,KACA,QAAA,GACA,QAAA,MCtBJ,KCgEI,UAAA,OACA,YAAA,EA/BA,iCDlCJ,KCgEI,UAAA,OACA,YAAA,GA/BA,iCDlCJ,KCgEI,UAAA,OACA,YAAA,GA/BA,iCDlCJ,KCgEI,UAAA,OACA,YAAA,GA/BA,kCDlCJ,KCgEI,UAAA,OACA,YAAA,GA/BA,kCDlCJ,KCgEI,UAAA,OACA,YAAA,GD7DJ,KACE,MAAA,KACA,YAAA,WAGF,GAAA,GAAA,GAAA,GAAA,GAAA,GACE,YAAA,WACA,MAAA,KACA,OAAA,EAGF,GCiDI,UAAA,KACA,YAAA,IA/BA,iCDnBJ,GCiDI,UAAA,KACA,YAAA,KA/BA,iCDnBJ,GCiDI,UAAA,KACA,YAAA,KA/BA,iCDnBJ,GCiDI,UAAA,KACA,YAAA,KA/BA,kCDnBJ,GCiDI,UAAA,KACA,YAAA,KA/BA,kCDnBJ,GCiDI,UAAA,KACA,YAAA,KDjDJ,GCgDI,UAAA,QACA,YAAA,IA/BA,iCDlBJ,GCgDI,UAAA,QACA,YAAA,KA/BA,iCDlBJ,GCgDI,UAAA,QACA,YAAA,KA/BA,iCDlBJ,GCgDI,UAAA,QACA,YAAA,KA/BA,kCDlBJ,GCgDI,UAAA,QACA,YAAA,KA/BA,kCDlBJ,GCgDI,UAAA,QACA,YAAA,KDhDJ,GC+CI,UAAA,OACA,YAAA,IA/BA,iCDjBJ,GC+CI,UAAA,OACA,YAAA,KA/BA,iCDjBJ,GC+CI,UAAA,OACA,YAAA,KA/BA,iCDjBJ,GC+CI,UAAA,OACA,YAAA,KA/BA,kCDjBJ,GC+CI,UAAA,OACA,YAAA,KA/BA,kCDjBJ,GC+CI,UAAA,OACA,YAAA,KD/CJ,GC8CI,UAAA,QACA,YAAA,IA/BA,iCDhBJ,GC8CI,UAAA,QACA,YAAA,KA/BA,iCDhBJ,GC8CI,UAAA,QACA,YAAA,KA/BA,iCDhBJ,GC8CI,UAAA,QACA,YAAA,KA/BA,kCDhBJ,GC8CI,UAAA,QACA,YAAA,KA/BA,kCDhBJ,GC8CI,UAAA,QACA,YAAA,KD9CJ,GC6CI,UAAA,KACA,YAAA,IA/BA,iCDfJ,GC6CI,UAAA,KACA,YAAA,KA/BA,iCDfJ,GC6CI,UAAA,KACA,YAAA,KA/BA,iCDfJ,GC6CI,UAAA,KACA,YAAA,KA/BA,kCDfJ,GC6CI,UAAA,KACA,YAAA,KA/BA,kCDfJ,GC6CI,UAAA,KACA,YAAA,KD7CJ,GC4CI,UAAA,KACA,YAAA,IA/BA,iCDdJ,GC4CI,UAAA,KACA,YAAA,KA/BA,iCDdJ,GC4CI,UAAA,KACA,YAAA,KA/BA,iCDdJ,GC4CI,UAAA,KACA,YAAA,KA/BA,kCDdJ,GC4CI,UAAA,KACA,YAAA,KA/BA,kCDdJ,GC4CI,UAAA,KACA,YAAA,KD3CJ,EC0CI,UAAA,KACA,YAAA,IDzCF,OAAA,EAAA,EAAA,KCUE,iCDZJ,EC0CI,UAAA,KACA,YAAA,KA/BA,iCDZJ,EC0CI,UAAA,KACA,YA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","file":"master.min.css","sourcesContent":[null,"/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n","@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n","@import \"reset/reset\";\n@import \"bourbon/bourbon\";\n@import \"neat/neat-helpers\";\n@import \"typi/typi\";\n@import \"typi/mappy\";\n@import \"../base/grid-settings\";\n@import \"neat/neat\";\n\n.container {\n  @include outer-container();\n}\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centering it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://goo.gl/yP5hiZ\n///\n/// @example scss\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: block;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n","html {\n  @include typi-base();\n}\n\nbody {\n  color: $body-color;\n  font-family: $base-font-family;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: $header-font-family;\n  color: $heading-color;\n  margin: 0;\n}\n\nh1 { @include typi($h1-map); }\nh2 { @include typi($h2-map); }\nh3 { @include typi($h3-map); }\nh4 { @include typi($h4-map); }\nh5 { @include typi($h5-map); }\nh6 { @include typi($h6-map); }\n\np {\n  @include typi($p-map);\n  margin: 0 0 $base-spacing / 2;\n}\n\na {\n  color: $link-color;\n  transition: color 0.1s linear;\n\n  &:hover {\n    color: $link-hover-color;\n    text-decoration: none;\n  }\n\n  &:active,\n  &:focus {\n    color: $link-hover-color;\n  }\n}\n\nhr {\n  border: none;\n  border-bottom:  1px solid $border-color;\n  margin: $base-spacing 0;\n}\n\nimg {\n  margin: 0;\n  max-width: 100%;\n}\n\nabbr,\nacronym {\n  border-bottom: 1px dotted $border-color;\n  cursor: help;\n}\n\naddress {\n  display: block;\n  margin: 0 0 ($base-spacing / 2);\n}\n\nhgroup {\n  margin-bottom: $base-spacing / 2;\n}\n\ndel {\n  color: lighten($body-color, 15);\n}\n\nblockquote {\n  border-left: 2px solid $border-color;\n  color: lighten($body-color, 15);\n  margin: $base-spacing 0;\n  padding-left: $base-spacing / 2;\n}\n\ncite {\n  color: lighten($body-color, 25);\n  font-style: italic;\n\n  &:before {\n    content: '\\2014 \\00A0';\n  }\n}\n","\n// _ty-breakpoint\n// ==============\n// Allows use of breakpoint-sass and mappy-bp.\n// Falls back to default method otherwise.\n@mixin _ty-breakpoint(\n  $typi-map\n) {\n  $breakpoint: map-get($typi-map, breakpoint);\n  $breakpoints: map-get($typi-map, breakpoints);\n  $bp-val: map-get($breakpoints, $breakpoint);\n\n  @if $typi-breakpoint == breakpoint {\n    @if mixin-exists(breakpoint) {\n      @include breakpoint-set('to ems', true);\n      @include breakpoint(map-get($breakpoints, $breakpoint)) {\n        @include _ty-write-props($typi-map);\n      }\n    } @else {\n      @error 'Breakpoint-sass Library not found'\n    }\n  }\n\n  @else if $typi-breakpoint == mappy-breakpoint or $typi-breakpoint == mappy-breakpoints {\n    @if mixin-exists(mappy-bp) {\n      @include mappy-bp(map-get($breakpoints, $breakpoint)) {\n        @include _ty-write-props($typi-map);\n      }\n    } @else {\n      @error 'Mappy Breakpoints Library not found'\n    }\n  }\n\n  @else {\n    @media all and (min-width: #{map-get($breakpoints, $breakpoint)}) {\n      @include _ty-write-props($typi-map);\n    }\n  }\n}\n\n// _ty-write-props\n// ===============\n// Writes font-size (and line height) properties\n@mixin _ty-write-props (\n  $typi-map\n) {\n  $target: map-get($typi-map, target);\n  $breakpoint: map-get($typi-map, breakpoint);\n  $typi: map-get($typi-map, typi);\n  $base: map-get($typi-map, base);\n  $rem: map-get($typi-map, rem);\n\n  $bp-val: map-get($target, $breakpoint);\n  $font-size: null;\n  $line-height: null;\n\n  @if type-of($bp-val) == 'null' {\n    $last-valid-breakpoint: map-get($typi-map, last-valid-breakpoint);\n    $bp-val: map-get($target, $last-valid-breakpoint);\n  }\n\n  @if type-of($bp-val) == \"list\" and length($bp-val) > 1 {\n    $font-size: nth($bp-val, 1);\n    $line-height: nth($bp-val, 2);\n    font-size: _ty-font-size($font-size, $breakpoint, $typi, $rem, $base, $typi-map);\n    line-height: $line-height;\n  }\n  @else  {\n    $font-size: $bp-val;\n    font-size: _ty-font-size($font-size, $breakpoint, $typi, $rem, $base, $typi-map);\n  }\n}","// Buttons:\n$base-button-color: #333;\n$base-button-hover-color: lighten($base-button-color, 20);\n$primary-button-color: $link-color;\n$primary-button-hover-color: $link-hover-color;\n\n%button {\n  -webkit-font-smoothing: antialiased;\n  background-color: $base-button-color;\n  border-radius: $base-border-radius;\n  border: none;\n  color: white;\n  cursor: pointer;\n  display: inline-block;\n  font-size: $base-font-size;\n  font-weight: bold;\n  line-height: 1;\n  padding: .75em 1em;\n  text-decoration: none;\n  user-select: none;\n  white-space: nowrap;\n}\n\nbutton,\ninput[type=\"submit\"],\n.btn {\n  @extend %button;\n  appearance: none;\n\n  &:hover {\n    background-color: $base-button-hover-color;\n    color: white;\n  }\n\n  &.btn-primary {\n    background-color: $primary-button-color;\n    color: white;\n\n    &:hover {\n      background-color: $primary-button-hover-color;\n    }\n  }\n}\n","fieldset {\n  border: 1px solid $border-color;\n  margin: 0 0 ($base-spacing / 2) 0;\n  padding: $base-spacing;\n}\n\ninput,\nselect {\n  display: block;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n}\n\nlabel {\n  cursor: pointer;\n  font-weight: bold;\n  margin-bottom: $base-spacing / 4;\n\n  &.required:after {\n    content: \" *\";\n  }\n}\n\ntextarea,\n#{$all-text-inputs},\nselect[multiple=multiple] {\n  box-sizing: border-box;\n  background-color: white;\n  border-radius: $base-border-radius;\n  border: 1px solid $border-color;\n  margin-bottom: $base-spacing / 2;\n  padding: ($base-spacing / 3) ($base-spacing / 3);\n  width: 100%;\n\n  &:hover {\n    border-color: $border-color-hover;\n  }\n\n  &:focus {\n    border-color: $border-color-focus;\n    box-shadow: 0 0 5px rgba(darken($border-color-focus, 5), 0.7);\n  }\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput[type=\"search\"] {\n  appearance: none;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  display: inline;\n  margin-right: $base-spacing / 4;\n  width: auto;\n}\n\ninput[type=\"file\"] {\n  margin-bottom: $base-spacing / 2;\n  padding-bottom: $base-spacing / 3;\n  width: 100%;\n}\n\nselect {\n  margin-bottom: $base-spacing;\n  max-width: 100%;\n  width: auto;\n}\n\n.inline-form {\n  display: flex;\n\n  // Ensure inputs and buttons are the same height:\n  // (flex will make them the same height, including margin:\n  // if the margins differ, so will the heights)\n  input,\n  .btn {\n    margin-bottom: 0;\n    margin-right: 1rem;\n  }\n\n  input {\n    flex: 1 1 auto;\n  }\n\n  .btn {\n    flex: none;\n  }\n}\n","html, body {\n  height: 100%;\n}\n\nmain {\n  background-color: $main-bg-color;\n  padding-bottom: $gutter;\n}\n\n.container {\n  @include outer-container;\n  padding-left: $gutter;\n  padding-right: $gutter;\n  box-sizing: border-box;\n  position: relative;\n}\n","%unstyled-list {\n  margin:  0;\n  padding: 0;\n  list-style-type: none;\n}\n\nul, ol {\n  margin-bottom: $base-spacing / 2;\n  padding-left:  $base-spacing;\n\n  &.unstyled {\n    @extend %unstyled-list;\n  }\n}\n\ndl {\n  line-height:   $base-spacing;\n  margin-bottom: $base-spacing / 2;\n\n  dt {\n    font-weight: bold;\n    margin-top:  $base-spacing / 2;\n  }\n\n  dd {\n    margin: 0;\n  }\n}\n\n// Navigation lists are always unstyled:\nnav {\n  ul {\n    @extend %unstyled-list;\n  }\n}\n","// Pagination:\n$pagination-bg: $main-bg-color;\n$pagination-current-bg: #eee;\n\n.pagination {\n  clear: both;\n  margin: 2rem;\n\n  a {\n    background-color: $pagination-bg;\n    border: solid 1px $border-color;\n    display: inline-block;\n    padding: 0;\n    text-decoration: none;\n\n    padding: 0.5rem 1rem;\n    line-height: 2rem;\n\n    &:hover {\n      border-color: $border-color-hover;\n    }\n\n    &.current {\n      background-color: $pagination-current-bg;\n    }\n\n    &.next {\n\n    }\n\n    &.prev {\n\n    }\n  }\n\n  ul {\n    @extend %unstyled-list;\n    text-align: center;\n  }\n\n  li {\n    display: inline;\n  }\n  // Span is used to hide helper text for non-visual browsers:\n  span {\n    display: none;\n  }\n}\n","table {\n  border-collapse: collapse;\n  margin: ($base-spacing / 2) 0;\n  table-layout: fixed;\n  width: 100%;\n}\n\nth {\n  border-bottom: 1px solid darken($border-color, 15%);\n  font-weight: bold;\n  padding: ($base-spacing / 2) 0;\n  text-align: left;\n}\n\ntd {\n  border-bottom: 1px solid $border-color;\n  padding: ($base-spacing / 2) 0;\n}\n\ntr, td, th {\n  vertical-align: middle;\n}\n",".topnav {\n  border-bottom: solid 1px $border-color;\n  margin-bottom: $nav-spacing * 1;\n\n  a {\n    display: block;\n    height: $nav-spacing * 2.5;\n    line-height: $nav-spacing * 2.5;\n    text-decoration: none;\n  }\n  h1 {\n    @include span-columns(6);\n  }\n  nav {\n    @include span-columns(6);\n  }\n  ul {\n    float: right;\n    margin-right: -1em;\n  }\n  li {\n    display: inline-block;\n    text-transform: uppercase;\n\n    a {\n      padding-left: 1em;\n      padding-right: 1em;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display property of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n",".site-footer {\n  border-top: solid 1px $border-color;\n  margin-top:  $gutter;\n  padding-top: $gutter;\n}\n"]}